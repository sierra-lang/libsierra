digraph "CFG for 'kernel_mvt' function" {
	label="CFG for 'kernel_mvt' function";

	Node0x7f8339d102e0 [shape=record,label="{entry:\l  %polly.par.userContext33 = alloca \{ i32, i64, double*, double*, double* \}\l  %polly.par.userContext = alloca \{ i32, i64, double*, double*, double* \}\l  br label %polly.split_new_and_old\l}"];
	Node0x7f8339d102e0 -> Node0x7f8339d13d80;
	Node0x7f8339d13d80 [shape=record,label="{polly.split_new_and_old:                          \l  %0 = zext i32 %n to i64\l  %1 = sext i32 %n to i64\l  %2 = icmp sge i64 %0, %1\l  %polly.access.x2 = getelementptr double, double* %x2, i32 %n\l  %polly.access.x1 = getelementptr double, double* %x1, i64 0\l  %3 = icmp ule double* %polly.access.x2, %polly.access.x1\l  %polly.access.x11 = getelementptr double, double* %x1, i32 %n\l  %polly.access.x22 = getelementptr double, double* %x2, i64 0\l  %4 = icmp ule double* %polly.access.x11, %polly.access.x22\l  %5 = or i1 %3, %4\l  %6 = and i1 %2, %5\l  %7 = sext i32 %n to i64\l  %8 = sub nsw i64 %7, 1\l  %9 = zext i32 %n to i64\l  %polly.access.mul.A = mul i64 %8, %9\l  %10 = sext i32 %n to i64\l  %polly.access.add.A = add i64 %polly.access.mul.A, %10\l  %polly.access.A = getelementptr double, double* %A, i64 %polly.access.add.A\l  %polly.access.x13 = getelementptr double, double* %x1, i64 0\l  %11 = icmp ule double* %polly.access.A, %polly.access.x13\l  %polly.access.x14 = getelementptr double, double* %x1, i32 %n\l  %12 = zext i32 %n to i64\l  %polly.access.mul.A5 = mul i64 0, %12\l  %polly.access.add.A6 = add i64 %polly.access.mul.A5, 0\l  %polly.access.A7 = getelementptr double, double* %A, i64 %polly.access.add.A6\l  %13 = icmp ule double* %polly.access.x14, %polly.access.A7\l  %14 = or i1 %11, %13\l  %15 = and i1 %6, %14\l  %polly.access.y_1 = getelementptr double, double* %y_1, i32 %n\l  %polly.access.x18 = getelementptr double, double* %x1, i64 0\l  %16 = icmp ule double* %polly.access.y_1, %polly.access.x18\l  %polly.access.x19 = getelementptr double, double* %x1, i32 %n\l  %polly.access.y_110 = getelementptr double, double* %y_1, i64 0\l  %17 = icmp ule double* %polly.access.x19, %polly.access.y_110\l  %18 = or i1 %16, %17\l  %19 = and i1 %15, %18\l  %polly.access.y_2 = getelementptr double, double* %y_2, i32 %n\l  %polly.access.x111 = getelementptr double, double* %x1, i64 0\l  %20 = icmp ule double* %polly.access.y_2, %polly.access.x111\l  %polly.access.x112 = getelementptr double, double* %x1, i32 %n\l  %polly.access.y_213 = getelementptr double, double* %y_2, i64 0\l  %21 = icmp ule double* %polly.access.x112, %polly.access.y_213\l  %22 = or i1 %20, %21\l  %23 = and i1 %19, %22\l  %24 = sext i32 %n to i64\l  %25 = sub nsw i64 %24, 1\l  %26 = zext i32 %n to i64\l  %polly.access.mul.A14 = mul i64 %25, %26\l  %27 = sext i32 %n to i64\l  %polly.access.add.A15 = add i64 %polly.access.mul.A14, %27\l  %polly.access.A16 = getelementptr double, double* %A, i64\l... %polly.access.add.A15\l  %polly.access.x217 = getelementptr double, double* %x2, i64 0\l  %28 = icmp ule double* %polly.access.A16, %polly.access.x217\l  %polly.access.x218 = getelementptr double, double* %x2, i32 %n\l  %29 = zext i32 %n to i64\l  %polly.access.mul.A19 = mul i64 0, %29\l  %polly.access.add.A20 = add i64 %polly.access.mul.A19, 0\l  %polly.access.A21 = getelementptr double, double* %A, i64\l... %polly.access.add.A20\l  %30 = icmp ule double* %polly.access.x218, %polly.access.A21\l  %31 = or i1 %28, %30\l  %32 = and i1 %23, %31\l  %polly.access.y_122 = getelementptr double, double* %y_1, i32 %n\l  %polly.access.x223 = getelementptr double, double* %x2, i64 0\l  %33 = icmp ule double* %polly.access.y_122, %polly.access.x223\l  %polly.access.x224 = getelementptr double, double* %x2, i32 %n\l  %polly.access.y_125 = getelementptr double, double* %y_1, i64 0\l  %34 = icmp ule double* %polly.access.x224, %polly.access.y_125\l  %35 = or i1 %33, %34\l  %36 = and i1 %32, %35\l  %polly.access.y_226 = getelementptr double, double* %y_2, i32 %n\l  %polly.access.x227 = getelementptr double, double* %x2, i64 0\l  %37 = icmp ule double* %polly.access.y_226, %polly.access.x227\l  %polly.access.x228 = getelementptr double, double* %x2, i32 %n\l  %polly.access.y_229 = getelementptr double, double* %y_2, i64 0\l  %38 = icmp ule double* %polly.access.x228, %polly.access.y_229\l  %39 = or i1 %37, %38\l  %40 = and i1 %36, %39\l  br i1 %40, label %polly.start, label %entry.split\l|{<s0>T|<s1>F}}"];
	Node0x7f8339d13d80:s0 -> Node0x7f8339d16f70;
	Node0x7f8339d13d80:s1 -> Node0x7f8339d17010;
	Node0x7f8339d17010 [shape=record,label="{entry.split:                                      \l  %41 = zext i32 %n to i64\l  %cmp8 = icmp sgt i32 %n, 0\l  br i1 %cmp8, label %for.cond6.preheader.lr.ph, label %for.cond21.preheader\l|{<s0>T|<s1>F}}"];
	Node0x7f8339d17010:s0 -> Node0x7f8339d17080;
	Node0x7f8339d17010:s1 -> Node0x7f8339d15530;
	Node0x7f8339d17080 [shape=record,label="{for.cond6.preheader.lr.ph:                        \l  br label %for.cond6.preheader\l}"];
	Node0x7f8339d17080 -> Node0x7f8339d154c0;
	Node0x7f8339d154c0 [shape=record,label="{for.cond6.preheader:                              \l  %indvars.iv18 = phi i64 [ 0, %for.cond6.preheader.lr.ph ], [\l... %indvars.iv.next19, %for.inc18 ]\l  %cmp75 = icmp sgt i32 %n, 0\l  br i1 %cmp75, label %for.body8.lr.ph, label %for.inc18\l|{<s0>T|<s1>F}}"];
	Node0x7f8339d154c0:s0 -> Node0x7f8339d17470;
	Node0x7f8339d154c0:s1 -> Node0x7f8339d17280;
	Node0x7f8339d17470 [shape=record,label="{for.body8.lr.ph:                                  \l  br label %for.body8\l}"];
	Node0x7f8339d17470 -> Node0x7f8339d174e0;
	Node0x7f8339d176c0 [shape=record,label="{for.cond.for.cond21.preheader_crit_edge:          \l  br label %for.cond21.preheader\l}"];
	Node0x7f8339d176c0 -> Node0x7f8339d15530;
	Node0x7f8339d15530 [shape=record,label="{for.cond21.preheader:                             \l  %cmp223 = icmp sgt i32 %n, 0\l  br i1 %cmp223, label %for.cond24.preheader.lr.ph, label\l... %for.end44.region_exiting\l|{<s0>T|<s1>F}}"];
	Node0x7f8339d15530:s0 -> Node0x7f8339d15580;
	Node0x7f8339d15530:s1 -> Node0x7f8339d17900;
	Node0x7f8339d15580 [shape=record,label="{for.cond24.preheader.lr.ph:                       \l  br label %for.cond24.preheader\l}"];
	Node0x7f8339d15580 -> Node0x7f8339d17890;
	Node0x7f8339d174e0 [shape=record,label="{for.body8:                                        \l  %indvars.iv14 = phi i64 [ 0, %for.body8.lr.ph ], [ %indvars.iv.next15,\l... %for.body8 ]\l  %arrayidx = getelementptr inbounds double, double* %x1, i64 %indvars.iv18\l  %42 = load double, double* %arrayidx, align 8\l  %43 = mul nsw i64 %indvars.iv18, %41\l  %arrayidx11 = getelementptr inbounds double, double* %A, i64 %43\l  %arrayidx12 = getelementptr inbounds double, double* %arrayidx11, i64\l... %indvars.iv14\l  %44 = load double, double* %arrayidx12, align 8\l  %arrayidx14 = getelementptr inbounds double, double* %y_1, i64 %indvars.iv14\l  %45 = load double, double* %arrayidx14, align 8\l  %mul = fmul double %44, %45\l  %add15 = fadd double %42, %mul\l  %arrayidx17 = getelementptr inbounds double, double* %x1, i64 %indvars.iv18\l  store double %add15, double* %arrayidx17, align 8\l  %indvars.iv.next15 = add nuw nsw i64 %indvars.iv14, 1\l  %lftr.wideiv16 = trunc i64 %indvars.iv.next15 to i32\l  %exitcond17 = icmp ne i32 %lftr.wideiv16, %n\l  br i1 %exitcond17, label %for.body8, label %for.cond6.for.inc18_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x7f8339d174e0:s0 -> Node0x7f8339d174e0;
	Node0x7f8339d174e0:s1 -> Node0x7f8339d175e0;
	Node0x7f8339d175e0 [shape=record,label="{for.cond6.for.inc18_crit_edge:                    \l  br label %for.inc18\l}"];
	Node0x7f8339d175e0 -> Node0x7f8339d17280;
	Node0x7f8339d17280 [shape=record,label="{for.inc18:                                        \l  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1\l  %lftr.wideiv20 = trunc i64 %indvars.iv.next19 to i32\l  %exitcond21 = icmp ne i32 %lftr.wideiv20, %n\l  br i1 %exitcond21, label %for.cond6.preheader, label\l... %for.cond.for.cond21.preheader_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x7f8339d17280:s0 -> Node0x7f8339d154c0;
	Node0x7f8339d17280:s1 -> Node0x7f8339d176c0;
	Node0x7f8339d17890 [shape=record,label="{for.cond24.preheader:                             \l  %indvars.iv10 = phi i64 [ 0, %for.cond24.preheader.lr.ph ], [\l... %indvars.iv.next11, %for.inc42 ]\l  %cmp251 = icmp sgt i32 %n, 0\l  br i1 %cmp251, label %for.body26.lr.ph, label %for.inc42\l|{<s0>T|<s1>F}}"];
	Node0x7f8339d17890:s0 -> Node0x7f8339d188a0;
	Node0x7f8339d17890:s1 -> Node0x7f8339d172d0;
	Node0x7f8339d188a0 [shape=record,label="{for.body26.lr.ph:                                 \l  br label %for.body26\l}"];
	Node0x7f8339d188a0 -> Node0x7f8339d18920;
	Node0x7f8339d18920 [shape=record,label="{for.body26:                                       \l  %indvars.iv = phi i64 [ 0, %for.body26.lr.ph ], [ %indvars.iv.next,\l... %for.body26 ]\l  %arrayidx28 = getelementptr inbounds double, double* %x2, i64 %indvars.iv10\l  %46 = load double, double* %arrayidx28, align 8\l  %47 = mul nuw nsw i64 %indvars.iv, %41\l  %arrayidx31 = getelementptr inbounds double, double* %A, i64 %47\l  %arrayidx32 = getelementptr inbounds double, double* %arrayidx31, i64\l... %indvars.iv10\l  %48 = load double, double* %arrayidx32, align 8\l  %arrayidx34 = getelementptr inbounds double, double* %y_2, i64 %indvars.iv\l  %49 = load double, double* %arrayidx34, align 8\l  %mul35 = fmul double %48, %49\l  %add36 = fadd double %46, %mul35\l  %arrayidx38 = getelementptr inbounds double, double* %x2, i64 %indvars.iv10\l  store double %add36, double* %arrayidx38, align 8\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %lftr.wideiv = trunc i64 %indvars.iv.next to i32\l  %exitcond = icmp ne i32 %lftr.wideiv, %n\l  br i1 %exitcond, label %for.body26, label %for.cond24.for.inc42_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x7f8339d18920:s0 -> Node0x7f8339d18920;
	Node0x7f8339d18920:s1 -> Node0x7f8339d18a20;
	Node0x7f8339d18a20 [shape=record,label="{for.cond24.for.inc42_crit_edge:                   \l  br label %for.inc42\l}"];
	Node0x7f8339d18a20 -> Node0x7f8339d172d0;
	Node0x7f8339d172d0 [shape=record,label="{for.inc42:                                        \l  %indvars.iv.next11 = add nuw nsw i64 %indvars.iv10, 1\l  %lftr.wideiv12 = trunc i64 %indvars.iv.next11 to i32\l  %exitcond13 = icmp ne i32 %lftr.wideiv12, %n\l  br i1 %exitcond13, label %for.cond24.preheader, label\l... %for.cond21.for.end44_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x7f8339d172d0:s0 -> Node0x7f8339d17890;
	Node0x7f8339d172d0:s1 -> Node0x7f8339d17230;
	Node0x7f8339d17230 [shape=record,label="{for.cond21.for.end44_crit_edge:                   \l  br label %for.end44.region_exiting\l}"];
	Node0x7f8339d17230 -> Node0x7f8339d17900;
	Node0x7f8339d17900 [shape=record,label="{for.end44.region_exiting:                         \l  br label %polly.merge_new_and_old\l}"];
	Node0x7f8339d17900 -> Node0x7f8339d17980;
	Node0x7f8339d17980 [shape=record,label="{polly.merge_new_and_old:                          \l  br label %for.end44\l}"];
	Node0x7f8339d17980 -> Node0x7f8339d19770;
	Node0x7f8339d19770 [shape=record,label="{for.end44:                                        \l  ret void\l}"];
	Node0x7f8339d16f70 [shape=record,label="{polly.start:                                      \l  br label %polly.parallel.for\l}"];
	Node0x7f8339d16f70 -> Node0x7f8339d16fc0;
	Node0x7f8339d16fc0 [shape=record,label="{polly.parallel.for:                               \l  %50 = sext i32 %n to i64\l  %51 = sub nsw i64 %50, 1\l  %polly.fdiv_q.shr = ashr i64 %51, 5\l  %polly.subfn.storeaddr.n = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext, i32 0, i32 0\l  store i32 %n, i32* %polly.subfn.storeaddr.n\l  %polly.subfn.storeaddr. = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext, i32 0, i32 1\l  store i64 %0, i64* %polly.subfn.storeaddr.\l  %polly.subfn.storeaddr.x1 = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext, i32 0, i32 2\l  store double* %x1, double** %polly.subfn.storeaddr.x1\l  %polly.subfn.storeaddr.A = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext, i32 0, i32 3\l  store double* %A, double** %polly.subfn.storeaddr.A\l  %polly.subfn.storeaddr.y_1 = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext, i32 0, i32 4\l  store double* %y_1, double** %polly.subfn.storeaddr.y_1\l  %polly.par.userContext30 = bitcast \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext to i8*\l  %52 = add i64 %polly.fdiv_q.shr, 1\l  call void @GOMP_parallel_loop_runtime_start(void (i8*)*\l... @kernel_mvt_polly_subfn, i8* %polly.par.userContext30, i32 0, i64 0, i64 %52,\l... i64 1)\l  call void @kernel_mvt_polly_subfn(i8* %polly.par.userContext30)\l  call void @GOMP_parallel_end()\l  br label %polly.parallel.for31\l}"];
	Node0x7f8339d16fc0 -> Node0x7f8339d1a9f0;
	Node0x7f8339d1a9f0 [shape=record,label="{polly.parallel.for31:                             \l  %53 = sext i32 %n to i64\l  %54 = sub nsw i64 %53, 1\l  %polly.fdiv_q.shr32 = ashr i64 %54, 5\l  %polly.subfn.storeaddr.n34 = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext33, i32 0, i32 0\l  store i32 %n, i32* %polly.subfn.storeaddr.n34\l  %polly.subfn.storeaddr.35 = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext33, i32 0, i32 1\l  store i64 %0, i64* %polly.subfn.storeaddr.35\l  %polly.subfn.storeaddr.x2 = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext33, i32 0, i32 2\l  store double* %x2, double** %polly.subfn.storeaddr.x2\l  %polly.subfn.storeaddr.A36 = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext33, i32 0, i32 3\l  store double* %A, double** %polly.subfn.storeaddr.A36\l  %polly.subfn.storeaddr.y_2 = getelementptr inbounds \{ i32, i64, double*,\l... double*, double* \}, \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext33, i32 0, i32 4\l  store double* %y_2, double** %polly.subfn.storeaddr.y_2\l  %polly.par.userContext37 = bitcast \{ i32, i64, double*, double*, double* \}*\l... %polly.par.userContext33 to i8*\l  %55 = add i64 %polly.fdiv_q.shr32, 1\l  call void @GOMP_parallel_loop_runtime_start(void (i8*)*\l... @kernel_mvt_polly_subfn_1, i8* %polly.par.userContext37, i32 0, i64 0, i64\l... %55, i64 1)\l  call void @kernel_mvt_polly_subfn_1(i8* %polly.par.userContext37)\l  call void @GOMP_parallel_end()\l  br label %polly.exiting\l}"];
	Node0x7f8339d1a9f0 -> Node0x7f8339d1b820;
	Node0x7f8339d1b820 [shape=record,label="{polly.exiting:                                    \l  br label %polly.merge_new_and_old\l}"];
	Node0x7f8339d1b820 -> Node0x7f8339d17980;
}
